[[plugins]]
repo = 'Shougo/dein.vim'
# rev = '1.0'
rtp = ''

[[plugins]]
repo = 'christoomey/vim-tmux-navigator'
hook_add = '''
  nnoremap <silent> <C-w>h :TmuxNavigateLeft<cr>
  nnoremap <silent> <C-w>j :TmuxNavigateDown<cr>
  nnoremap <silent> <C-w>k :TmuxNavigateUp<cr>
  nnoremap <silent> <C-w>l :TmuxNavigateRight<cr>
  nnoremap <silent> <C-w>\\ :TmuxNavigatePrevious<cr>
'''

[[plugins]]
repo = 'scrooloose/nerdcommenter'
hook_add = '''
  execute 'source' g:dein_plugin_rc_dir . '/nerdcommenter.rc.vim'
  nmap <leader>/ <Plug>NERDCommenterToggle
  vmap <leader>/ <Plug>NERDCommenterToggle
'''

[[plugins]]
repo = 'vim-airline/vim-airline'
hook_add = '''
  execute 'source' g:dein_plugin_rc_dir . '/airline.rc.vim'
'''

[[plugins]]
repo = 'vim-airline/vim-airline-themes'

[[plugins]]
repo = 'tpope/vim-fugitive'

[[plugins]]
repo = 'airblade/vim-gitgutter'

[[plugins]]
repo = 'tpope/vim-surround'

[[plugins]]
repo = 'rhysd/clever-f.vim'
hook_add = '''
  let g:clever_f_smart_case = 1
'''

[[plugins]]
repo = 'AndrewRadev/switch.vim'
hook_add = '''
  nnoremap ! :Switch<CR>
'''

[[plugins]]
repo = 'mattn/emmet-vim'

[[plugins]]
repo = 'othree/html5.vim'
on_ft = 'html'

[[plugins]]
repo = 'hail2u/vim-css3-syntax'
on_ft = 'css'

[[plugins]]
repo = 'pangloss/vim-javascript'
on_ft = 'javascript'
hook_add = '''
  let g:javascript_plugin_flow = 1
'''

[[plugins]]
repo = 'mxw/vim-jsx'
on_ft = 'javascript'
hook_add = '''
  let g:jsx_ext_required = 0
'''

[[plugins]]
repo = 'fleischie/vim-styled-components'
on_ft = 'javascript'

[[plugins]]
repo = 'leafgarland/typescript-vim'
on_ft = 'typescript'

[[plugins]]
repo = 'fatih/vim-go'
on_ft = 'go'
hook_add = '''
  let g:go_highlight_operators = 1
  let g:go_highlight_functions = 1
  let g:go_highlight_methods = 1
  let g:go_highlight_fields = 0
  let g:go_highlight_types = 1
  let g:go_highlight_extra_types = 1
  let g:go_highlight_build_constraints = 1
  let g:go_highlight_generate_tags = 1
  let g:go_highlight_format_strings = 1
  let g:go_fmt_experimental = 1
  let g:go_fmt_command = "goimports"
  let g:go_test_timeout= '15s'
  " for LSP
  let g:go_fmt_autosave = 1
  let g:go_def_mapping_enabled = 0
  let g:go_doc_keywordprg_enabled = 0
'''

[[plugins]]
repo = 'sebdah/vim-delve'
on_ft = 'go'
hook_add = '''
  nnoremap <leader>b :<C-u>DlvToggleBreakpoint<CR>
  nnoremap <leader>d :<C-u>DlvDebug<CR>
'''

[[plugins]]
repo = 'rust-lang/rust.vim'
on_ft = 'rust'
hook_add = '''
  let g:rustfmt_autosave = 1
'''

[[plugins]]
repo = 'Shougo/vimshell.vim' # for vim/delve
if = "!has('nvim')"

[[plugins]]
repo = 'tpope/vim-endwise'
on_ft = 'ruby'
on_event = 'InsertEnter'

[[plugins]]
repo = 'chrisbra/vim-sh-indent'
on_ft = 'sh'

[[plugins]]
repo = 'cespare/vim-toml'
on_ft = 'toml'

[[plugins]]
repo = 'direnv/direnv.vim'

[[plugins]]
repo = 'cocopon/iceberg.vim'
hook_add = '''
  augroup MyAutoCmd
    autocmd VimEnter * nested colorscheme iceberg
    if !has("gui_running")
      autocmd Colorscheme * highlight Normal ctermbg=none
      autocmd Colorscheme * highlight NonText ctermbg=none
      autocmd Colorscheme * highlight LineNr ctermbg=none
      autocmd Colorscheme * highlight Folded ctermbg=none
      autocmd Colorscheme * highlight EndOfBuffer ctermbg=none
    endif
  augroup END
'''

[[plugins]]
repo = 'prabirshrestha/async.vim'

[[plugins]]
repo = 'prabirshrestha/asyncomplete.vim'
hook_add = '''
  let g:asyncomplete_auto_popup = 1
  let g:asyncomplete_auto_completeopt = 0
  let g:asyncomplete_popup_delay = 200
'''
depends = ['async.vim']

[[plugins]]
repo = 'prabirshrestha/asyncomplete-lsp.vim'
depends = ['asyncomplete.vim']

[[plugins]]
repo = 'prabirshrestha/vim-lsp'
hook_source = '''
  function! s:on_lsp_buffer_enabled() abort
      setlocal omnifunc=lsp#complete
      setlocal signcolumn=yes
      nmap <buffer> gd <plug>(lsp-definition)
      nmap <buffer> <f2> <plug>(lsp-rename)
      " refer to doc to add more commands
  endfunction

  augroup lsp_install
      au!
      " call s:on_lsp_buffer_enabled only for languages that has the server registered.
      autocmd User lsp_buffer_enabled call s:on_lsp_buffer_enabled()
  augroup END

  let g:lsp_signs_enabled = 1
  let g:lsp_diagnostics_enabled = 1
  let g:lsp_diagnostics_echo_cursor = 1
  let g:lsp_text_edit_enabled = 1
'''
depends = ['async.vim']

[[plugins]]
repo = 'mattn/vim-lsp-settings'
hook_source = '''
  let g:lsp_settings = {
  \  'gopls': {'workspace_config': {
  \     'staticcheck': v:true,
  \     'completeUnimported': v:true,
  \     'caseSensitiveCompletion': v:true,
  \     'usePlaceholders': v:true,
  \     'completionDocumentation': v:true,
  \     'watchFileChanges': v:true,
  \     'hoverKind': 'SingleLine',
  \  }}
  \}
'''
merged = 0
depends = ['vim-lsp']

[[plugins]]
repo = 'mattn/vim-lsp-icons'
depends = ['vim-lsp']

[[plugins]]
repo = 'w0rp/ale'
hook_add = '''
  execute 'source' g:dein_plugin_rc_dir . '/ale.rc.vim'
'''

[[plugins]]
repo = 'uber/prototool'
rtp = 'vim/prototool'
on_ft = 'proto'

[[plugins]]
repo = "diepm/vim-rest-console"
hook_add = '''
  let g:vrc_auto_format_response_enabled = 1
  let g:vrc_auto_format_response_patterns = {
  \ 'json': 'jq "."',
  \}
'''

[[plugins]]
repo = "joker1007/vim-ruby-heredoc-syntax"
on_ft = 'ruby'
hook_add = '''
  let g:ruby_heredoc_syntax_filetypes = {
  \ "ruby" : {
  \   "start" : "RUBY",
  \},
  \}
'''

[[plugins]]
repo = 'junegunn/fzf'
build = './install --all'
merged = 0

[[plugins]]
repo = 'junegunn/fzf.vim'
depends = ['fzf']
hook_add = '''
  execute 'source' g:dein_plugin_rc_dir . '/fzf.rc.vim'
  if system("git rev-parse --is-inside-work-tree 2> /dev/null ; echo $?") == 0
    nnoremap <silent> <Leader><Leader> :<C-u>GFiles --cached --others --exclude-standard<CR>
  else
    nnoremap <silent> <Leader><Leader> :<C-u>Files<CR>
  endif
  nnoremap <silent> <Leader>g :<C-u>Rg<CR>
'''
